--- a/com/mojang/blaze3d/matrix/MatrixStack.java
+++ b/com/mojang/blaze3d/matrix/MatrixStack.java
@@ -1,17 +1,16 @@
 package com.mojang.blaze3d.matrix;
 
 import com.google.common.collect.Queues;
-import java.util.ArrayDeque;
-import java.util.Deque;
 import net.minecraft.util.Util;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.math.vector.Matrix3f;
 import net.minecraft.util.math.vector.Matrix4f;
 import net.minecraft.util.math.vector.Quaternion;
 
-public class MatrixStack
-{
-    Deque<MatrixStack.Entry> freeEntries = new ArrayDeque<>();
+import java.util.ArrayDeque;
+import java.util.Deque;
+
+public class MatrixStack {
     private final Deque<MatrixStack.Entry> stack = Util.make(Queues.newArrayDeque(), (p_lambda$new$0_0_) ->
     {
         Matrix4f matrix4f = new Matrix4f();
@@ -20,22 +19,19 @@
         matrix3f.setIdentity();
         p_lambda$new$0_0_.add(new MatrixStack.Entry(matrix4f, matrix3f));
     });
+    Deque<MatrixStack.Entry> freeEntries = new ArrayDeque<>();
 
-    public void translate(double x, double y, double z)
-    {
+    public void translate(double x, double y, double z) {
         MatrixStack.Entry matrixstack$entry = this.stack.getLast();
-        matrixstack$entry.matrix.mulTranslate((float)x, (float)y, (float)z);
+        matrixstack$entry.matrix.mulTranslate((float) x, (float) y, (float) z);
     }
 
-    public void scale(float x, float y, float z)
-    {
+    public void scale(float x, float y, float z) {
         MatrixStack.Entry matrixstack$entry = this.stack.getLast();
         matrixstack$entry.matrix.mulScale(x, y, z);
 
-        if (x == y && y == z)
-        {
-            if (x > 0.0F)
-            {
+        if (x == y && y == z) {
+            if (x > 0.0F) {
                 return;
             }
 
@@ -49,24 +45,19 @@
         matrixstack$entry.normal.mul(Matrix3f.makeScaleMatrix(f3 * f, f3 * f1, f3 * f2));
     }
 
-    public void rotate(Quaternion quaternion)
-    {
+    public void rotate(Quaternion quaternion) {
         MatrixStack.Entry matrixstack$entry = this.stack.getLast();
         matrixstack$entry.matrix.mul(quaternion);
         matrixstack$entry.normal.mul(quaternion);
     }
 
-    public void push()
-    {
+    public void push() {
         MatrixStack.Entry matrixstack$entry = this.stack.getLast();
         MatrixStack.Entry matrixstack$entry1 = this.freeEntries.pollLast();
 
-        if (matrixstack$entry1 == null)
-        {
+        if (matrixstack$entry1 == null) {
             matrixstack$entry1 = new MatrixStack.Entry(matrixstack$entry.matrix.copy(), matrixstack$entry.normal.copy());
-        }
-        else
-        {
+        } else {
             matrixstack$entry1.matrix.set(matrixstack$entry.matrix);
             matrixstack$entry1.normal.set(matrixstack$entry.normal);
         }
@@ -74,54 +65,44 @@
         this.stack.addLast(matrixstack$entry1);
     }
 
-    public void pop()
-    {
+    public void pop() {
         MatrixStack.Entry matrixstack$entry = this.stack.removeLast();
 
-        if (matrixstack$entry != null)
-        {
+        if (matrixstack$entry != null) {
             this.freeEntries.add(matrixstack$entry);
         }
     }
 
-    public MatrixStack.Entry getLast()
-    {
+    public MatrixStack.Entry getLast() {
         return this.stack.getLast();
     }
 
-    public boolean clear()
-    {
+    public boolean clear() {
         return this.stack.size() == 1;
     }
 
-    public String toString()
-    {
+    public String toString() {
         return this.getLast().toString();
     }
 
-    public static final class Entry
-    {
+    public static final class Entry {
         private final Matrix4f matrix;
         private final Matrix3f normal;
 
-        private Entry(Matrix4f matrix, Matrix3f normal)
-        {
+        private Entry(Matrix4f matrix, Matrix3f normal) {
             this.matrix = matrix;
             this.normal = normal;
         }
 
-        public Matrix4f getMatrix()
-        {
+        public Matrix4f getMatrix() {
             return this.matrix;
         }
 
-        public Matrix3f getNormal()
-        {
+        public Matrix3f getNormal() {
             return this.normal;
         }
 
-        public String toString()
-        {
+        public String toString() {
             return this.matrix.toString() + this.normal.toString();
         }
     }
